{
  "test_metadata": {
    "version": "1.0.0",
    "schema_version": "1.0",
    "created_date": "2024-01-01",
    "description": "Test configuration for algorithm validation framework",
    "test_framework": "pytest",
    "compatible_algorithms": [
      "infotaxis",
      "casting",
      "gradient_following",
      "plume_tracking",
      "hybrid_strategies",
      "reference_implementation"
    ],
    "supported_formats": [
      "crimaldi",
      "custom_avi"
    ],
    "validation_requirements": {
      "correlation_threshold": 0.95,
      "reproducibility_coefficient": 0.99,
      "max_execution_time_seconds": 7.2,
      "numerical_precision": 1e-06
    }
  },
  "test_scenarios": [
    {
      "scenario_name": "basic_infotaxis_validation",
      "description": "Basic infotaxis algorithm validation with standard parameters",
      "algorithm_type": "infotaxis",
      "test_type": "accuracy_validation",
      "parameters": {
        "entropy_threshold": 0.1,
        "search_radius_meters": 0.5,
        "step_size_meters": 0.01,
        "max_steps": 1000,
        "information_gain_weight": 1.0,
        "exploration_factor": 0.1,
        "probability_grid_size": 50,
        "diffusion_coefficient": 0.001
      },
      "environment_config": {
        "arena_size_meters": {
          "width": 1.0,
          "height": 1.0
        },
        "source_location": {
          "x": 0.8,
          "y": 0.5
        },
        "agent_start_location": {
          "x": 0.1,
          "y": 0.5
        }
      },
      "validation_criteria": {
        "success_rate_threshold": 0.8,
        "max_execution_time": 5.0,
        "convergence_required": true
      }
    },
    {
      "scenario_name": "casting_behavior_validation",
      "description": "Casting algorithm validation with systematic crosswind search",
      "algorithm_type": "casting",
      "test_type": "behavior_validation",
      "parameters": {
        "cast_width_meters": 0.2,
        "cast_frequency_hz": 2.0,
        "upwind_velocity_mps": 0.05,
        "crosswind_velocity_mps": 0.02,
        "detection_threshold": 0.01,
        "max_cast_cycles": 50
      },
      "environment_config": {
        "arena_size_meters": {
          "width": 2.0,
          "height": 1.0
        },
        "source_location": {
          "x": 1.8,
          "y": 0.5
        },
        "agent_start_location": {
          "x": 0.2,
          "y": 0.5
        },
        "wind_conditions": {
          "mean_velocity_mps": 0.1,
          "direction_degrees": 0
        }
      },
      "validation_criteria": {
        "casting_pattern_validation": true,
        "upwind_surge_detection": true,
        "search_efficiency_threshold": 0.7
      }
    },
    {
      "scenario_name": "parameter_boundary_testing",
      "description": "Test algorithm behavior at parameter boundaries",
      "algorithm_type": "infotaxis",
      "test_type": "boundary_validation",
      "parameter_variations": [
        {
          "name": "minimum_entropy_threshold",
          "parameters": {
            "entropy_threshold": 0.001,
            "search_radius_meters": 0.1,
            "step_size_meters": 0.001,
            "max_steps": 5000
          }
        },
        {
          "name": "maximum_search_radius",
          "parameters": {
            "entropy_threshold": 0.5,
            "search_radius_meters": 2.0,
            "step_size_meters": 0.1,
            "max_steps": 1000
          }
        }
      ],
      "validation_criteria": {
        "parameter_validation_required": true,
        "numerical_stability_check": true,
        "convergence_analysis": true
      }
    },
    {
      "scenario_name": "cross_format_compatibility",
      "description": "Validate algorithm performance across Crimaldi and custom formats",
      "algorithm_type": "infotaxis",
      "test_type": "compatibility_validation",
      "format_tests": [
        {
          "format": "crimaldi",
          "data_source": "test_fixtures/crimaldi_sample.avi",
          "expected_correlation": 0.98
        },
        {
          "format": "custom_avi",
          "data_source": "test_fixtures/custom_sample.avi",
          "expected_correlation": 0.95
        }
      ],
      "parameters": {
        "entropy_threshold": 0.1,
        "search_radius_meters": 0.5,
        "step_size_meters": 0.01,
        "max_steps": 2000
      },
      "validation_criteria": {
        "cross_format_correlation_threshold": 0.9,
        "intensity_calibration_consistency": 0.01,
        "temporal_alignment_accuracy": 0.001
      }
    },
    {
      "scenario_name": "performance_stress_testing",
      "description": "Performance validation under computational stress",
      "algorithm_type": "infotaxis",
      "test_type": "performance_validation",
      "stress_parameters": {
        "large_grid_size": 200,
        "high_iteration_count": 10000,
        "complex_environment": true,
        "memory_constraint_mb": 512
      },
      "parameters": {
        "entropy_threshold": 0.05,
        "search_radius_meters": 1.0,
        "step_size_meters": 0.005,
        "max_steps": 10000,
        "probability_grid_size": 200
      },
      "validation_criteria": {
        "max_execution_time_seconds": 7.2,
        "memory_usage_limit_mb": 512,
        "accuracy_maintenance_required": true
      }
    },
    {
      "scenario_name": "hybrid_strategy_validation",
      "description": "Validate hybrid algorithm strategy switching",
      "algorithm_type": "hybrid_strategies",
      "test_type": "strategy_validation",
      "parameters": {
        "strategy_switching_criteria": [
          "plume_contact_loss",
          "search_time_threshold"
        ],
        "primary_strategy": "infotaxis",
        "fallback_strategy": "casting",
        "switching_threshold": 0.05,
        "strategy_weights": {
          "infotaxis": 0.7,
          "casting": 0.3
        }
      },
      "validation_criteria": {
        "strategy_switching_detection": true,
        "performance_improvement_validation": true,
        "robustness_assessment": true
      }
    },
    {
      "scenario_name": "reproducibility_validation",
      "description": "Validate result reproducibility across multiple runs",
      "algorithm_type": "infotaxis",
      "test_type": "reproducibility_validation",
      "parameters": {
        "entropy_threshold": 0.1,
        "search_radius_meters": 0.5,
        "step_size_meters": 0.01,
        "max_steps": 1000,
        "random_seed": 42
      },
      "test_configuration": {
        "number_of_runs": 10,
        "statistical_validation": true,
        "variance_analysis": true
      },
      "validation_criteria": {
        "reproducibility_coefficient_threshold": 0.99,
        "trajectory_similarity_threshold": 0.95,
        "performance_consistency_required": true
      }
    }
  ],
  "algorithm_configurations": {
    "infotaxis": {
      "default_parameters": {
        "entropy_threshold": 0.1,
        "search_radius_meters": 0.5,
        "step_size_meters": 0.01,
        "max_steps": 10000,
        "information_gain_weight": 1.0,
        "exploration_factor": 0.1,
        "probability_grid_size": 100,
        "diffusion_coefficient": 0.001
      },
      "parameter_bounds": {
        "entropy_threshold": {
          "min": 0.001,
          "max": 1.0
        },
        "search_radius_meters": {
          "min": 0.01,
          "max": 10.0
        },
        "step_size_meters": {
          "min": 0.001,
          "max": 1.0
        },
        "max_steps": {
          "min": 100,
          "max": 100000
        },
        "information_gain_weight": {
          "min": 0.0,
          "max": 10.0
        },
        "exploration_factor": {
          "min": 0.0,
          "max": 1.0
        },
        "probability_grid_size": {
          "min": 10,
          "max": 500
        }
      },
      "validation_requirements": {
        "convergence_criteria": [
          "entropy_threshold",
          "information_gain_rate"
        ],
        "numerical_stability": true,
        "performance_baseline": "reference_implementation"
      }
    },
    "casting": {
      "default_parameters": {
        "cast_width_meters": 0.2,
        "cast_frequency_hz": 2.0,
        "upwind_velocity_mps": 0.05,
        "crosswind_velocity_mps": 0.02,
        "detection_threshold": 0.01,
        "max_cast_cycles": 100
      },
      "parameter_bounds": {
        "cast_width_meters": {
          "min": 0.01,
          "max": 5.0
        },
        "cast_frequency_hz": {
          "min": 0.1,
          "max": 10.0
        },
        "upwind_velocity_mps": {
          "min": 0.001,
          "max": 1.0
        },
        "crosswind_velocity_mps": {
          "min": 0.001,
          "max": 1.0
        },
        "detection_threshold": {
          "min": 0.001,
          "max": 1.0
        },
        "max_cast_cycles": {
          "min": 1,
          "max": 1000
        }
      },
      "validation_requirements": {
        "behavior_patterns": [
          "crosswind_casting",
          "upwind_surge"
        ],
        "search_efficiency": true,
        "plume_detection_accuracy": true
      }
    },
    "gradient_following": {
      "default_parameters": {
        "gradient_estimation_method": "finite_difference",
        "step_size_adaptive": true,
        "initial_step_size_meters": 0.005,
        "gradient_threshold": 1e-06,
        "momentum_factor": 0.9,
        "learning_rate": 0.01
      },
      "parameter_bounds": {
        "initial_step_size_meters": {
          "min": 0.001,
          "max": 1.0
        },
        "gradient_threshold": {
          "min": 1e-10,
          "max": 1.0
        },
        "momentum_factor": {
          "min": 0.0,
          "max": 1.0
        },
        "learning_rate": {
          "min": 0.001,
          "max": 1.0
        }
      },
      "validation_requirements": {
        "gradient_calculation_accuracy": true,
        "convergence_stability": true,
        "numerical_precision": 1e-08
      }
    },
    "hybrid_strategies": {
      "default_parameters": {
        "strategy_switching_criteria": [
          "plume_contact_loss",
          "search_time_threshold"
        ],
        "primary_strategy": "infotaxis",
        "fallback_strategy": "casting",
        "switching_threshold": 0.05,
        "strategy_weights": {
          "infotaxis": 0.7,
          "casting": 0.3
        }
      },
      "validation_requirements": {
        "strategy_switching_logic": true,
        "performance_optimization": true,
        "robustness_analysis": true
      }
    }
  },
  "test_environment_configuration": {
    "simulation_settings": {
      "max_simulation_time_seconds": 300,
      "time_step_seconds": 0.1,
      "numerical_precision": "float64",
      "random_seed_control": true
    },
    "performance_monitoring": {
      "execution_time_tracking": true,
      "memory_usage_monitoring": true,
      "resource_utilization_logging": true,
      "performance_threshold_validation": true
    },
    "validation_framework": {
      "statistical_validation": true,
      "cross_platform_testing": true,
      "reproducibility_checking": true,
      "accuracy_assessment": true
    },
    "error_handling": {
      "parameter_validation": true,
      "numerical_stability_monitoring": true,
      "convergence_failure_detection": true,
      "graceful_degradation": true
    }
  },
  "reference_benchmarks": {
    "infotaxis_reference": {
      "source_localization_success_rate": 0.85,
      "average_steps_to_convergence": 500,
      "trajectory_efficiency": 0.75,
      "information_gain_rate": 0.02
    },
    "casting_reference": {
      "source_localization_success_rate": 0.8,
      "average_cast_cycles": 25,
      "search_pattern_efficiency": 0.7,
      "plume_detection_rate": 0.9
    },
    "performance_baselines": {
      "execution_time_seconds": 5.0,
      "memory_usage_mb": 256,
      "accuracy_correlation": 0.95,
      "reproducibility_coefficient": 0.99
    }
  },
  "data_validation": {
    "input_data_requirements": {
      "plume_data_format": [
        "numpy_array",
        "hdf5"
      ],
      "temporal_resolution_hz": {
        "min": 1,
        "max": 1000
      },
      "spatial_resolution_pixels": {
        "min": 50,
        "max": 2000
      },
      "intensity_range": {
        "min": 0.0,
        "max": 1.0
      }
    },
    "output_validation": {
      "trajectory_data_completeness": true,
      "performance_metrics_calculation": true,
      "statistical_properties_validation": true,
      "format_compliance_checking": true
    }
  }
}