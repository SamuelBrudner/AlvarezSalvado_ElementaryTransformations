#!/bin/bash
# Generate Makefile include with paths from project_paths.yaml
# This script is called by setup_env.sh during environment setup

set -euo pipefail

# Get the directory of this script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "${SCRIPT_DIR}/.." && pwd)"
CONFIG_DIR="${PROJECT_ROOT}/configs"
PATHS_FILE="${CONFIG_DIR}/project_paths.yaml"
MAKEFILE_INCLUDE="${CONFIG_DIR}/makefile_paths.mk"

# Source the setup_utils.sh for logging
if [ -f "${PROJECT_ROOT}/setup_utils.sh" ]; then
    # shellcheck source=./setup_utils.sh
    source "${PROJECT_ROOT}/setup_utils.sh"
else
    # Fallback logging if setup_utils.sh is not available
    log() {
        local level="$1"
        shift
        echo "[${level}] $*"
    }
fi

# Check if yq is available
if ! command -v yq &> /dev/null; then
    log ERROR "yq is required but not installed. Please install yq (https://github.com/mikefarah/yq) and try again."
    exit 1
fi

# Check if project_paths.yaml exists
if [ ! -f "${PATHS_FILE}" ]; then
    log ERROR "${PATHS_FILE} not found. Please run 'source paths.sh' first to generate it."
    exit 1
fi

# Create configs directory if it doesn't exist
mkdir -p "${CONFIG_DIR}"

# Generate the Makefile include
log INFO "Generating Makefile include with paths from ${PATHS_FILE}"

# Start with a header
echo "# Auto-generated Makefile include with paths from project_paths.yaml" > "${MAKEFILE_INCLUDE}"
echo "# Do not edit this file directly. It will be overwritten during setup." >> "${MAKEFILE_INCLUDE}"
echo "" >> "${MAKEFILE_INCLUDE}"

# Add paths from project_paths.yaml
echo "# Project root directory" >> "${MAKEFILE_INCLUDE}"
echo "PROJECT_ROOT := $(yq e '.project_root' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "" >> "${MAKEFILE_INCLUDE}"

# Script directories
echo "# Script directories" >> "${MAKEFILE_INCLUDE}"
echo "SCRIPTS_DIR := $(yq e '.scripts.python' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "MATLAB_SCRIPTS_DIR := $(yq e '.scripts.matlab' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "TEMP_SCRIPTS_DIR := $(yq e '.scripts.temp' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "" >> "${MAKEFILE_INCLUDE}"

# Data files
echo "# Data files" >> "${MAKEFILE_INCLUDE}"
echo "DATA_CRIMALDI := $(yq e '.data.crimaldi' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "DATA_VIDEO := $(yq e '.data.video' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "" >> "${MAKEFILE_INCLUDE}"

# Configuration files
echo "# Configuration files" >> "${MAKEFILE_INCLUDE}"
echo "CONFIG_PLUME := $(yq e '.configs.plume' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "CONFIG_PATHS := $(yq e '.configs.paths' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "" >> "${MAKEFILE_INCLUDE}"

# Output directories
echo "# Output directories" >> "${MAKEFILE_INCLUDE}"
echo "OUTPUT_RAW := $(yq e '.output.raw' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "OUTPUT_PROCESSED := $(yq e '.output.processed' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "OUTPUT_FIGURES := $(yq e '.output.figures' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "OUTPUT_MATLAB_TEMP := $(yq e '.output.matlab_temp' "${PATHS_FILE}")" >> "${MAKEFILE_INCLUDE}"
echo "" >> "${MAKEFILE_INCLUDE}"

# Make sure output directories exist
echo "# Create output directories" >> "${MAKEFILE_INCLUDE}"
echo "_ensure_dirs:" >> "${MAKEFILE_INCLUDE}"
echo "\t@mkdir -p \$(OUTPUT_RAW) \$(OUTPUT_PROCESSED) \$(OUTPUT_FIGURES) \$(OUTPUT_MATLAB_TEMP)" >> "${MAKEFILE_INCLUDE}"
echo "" >> "${MAKEFILE_INCLUDE}"

log SUCCESS "Generated Makefile include at ${MAKEFILE_INCLUDE}"

exit 0
